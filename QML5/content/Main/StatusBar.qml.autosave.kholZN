import QtQuick 2.15
import QtQuick.Controls 2.15
import QtQuick 2.0
Rectangle {
    id: wrapper
    width: 1366
    height: 18
    color: "#ffffff"

    property var dataMap: {"Friday":"星期五",
                           "Monday":"星期一",
                           "Tuesday" :"星期二",
                            "Wednesday":"星期三",
                            "Thursday":"星期四",
                            "Saturday":"星期六",
                            "Sunday":"星期日"}

    Text {
        id: connectionStatusTitle
        color: "#000000"
        text: qsTr("工艺数据连接状态:")
        anchors.verticalCenter: parent.verticalCenter
        anchors.left: parent.left
        anchors.leftMargin: 15
        font.pixelSize: 12
    }

    Rectangle {
        id: connectionLight
        color: "#ff0000"
        width: parent.height
        height: width
        radius: width/2
        anchors.verticalCenter: parent.verticalCenter
        anchors.left: connectionStatusTitle.right
        anchors.leftMargin: 5
        anchors.verticalCenterOffset: 1
    }

    Text {
        id: statusText
        color: "#000000"
        text: qsTr("未连接")
        anchors.verticalCenter: parent.verticalCenter
        anchors.left: connectionLight.right
        anchors.leftMargin: 10
        font.pixelSize: 12
    }

    Rectangle {
        id: syncLight
        color: "#00bb00"
        width: parent.height
        height: width
        radius: width/2
        anchors.verticalCenter: parent.verticalCenter
        anchors.left: statusText.right
        anchors.leftMargin: 50
        anchors.verticalCenterOffset: 1
    }

    Text {
        id: syncText
        font.pixelSize: 12
//        text: qsTr("已同步")

        anchors.left: syncLight.right
        anchors.leftMargin: 100
        anchors.verticalCenter: parent.verticalCenter
        anchors.verticalCenterOffset: 0
    }

    Text {
        id: datetimeText
        font.pixelSize: 12
        //x: 1236
        anchors.right: parent.right
        anchors.rightMargin: 20
        anchors.verticalCenter: parent.verticalCenter
        anchors.verticalCenterOffset: 0
    }
    Timer {
           id:timer
           interval: 500; running: true; repeat: true
           onTriggered: datetimeText.text =  Qt.formatDateTime(new Date(), "dddd yyyy-MM-dd hh:mm")
       }
    Timer {
           id:dbConnect
           interval: 500; running: true; repeat: true
           onTriggered: statusText.text= monitorDb()
       }
    Timer {
           id:syncDb
           interval: 500; running: true; repeat: true
           onTriggered: monitorSync()
       }


    function getData(){
        return dataMap[Qt.formatDateTime(new Date(), "dddd")]
    }

    function monitorDb(){
        if(scheduler.isPdbLoaded()){
            connectionLight.color = "#00ff00"
            return "连接成功!"
        }
        else{
            connectionLight.color = "#ff0000"
            return "未连接!"
        }
    }
    function monitorSync(){
        var sync =  "#2fc350"
        var unsync =  "#f4f42f"
        //var unconnect =  "#eee"

        if(scheduler.callIsDirty()){
            syncLight.color = unsync
            syncText.text = "修改后的数据未提交"
        }
        else{
            syncLight.color = sync
            syncText.text = "修改后的数据已提交"
        }

//        if(scheduler.isPdbLoaded()){//db is load)
//        }
//        else{
//            alertLight.color = unconnect
//            syncText.text = "未连接工艺数据库"
//        }

    }

}



/*##^##
Designer {
    D{i:0;formeditorZoom:1.1;height:16;width:1366}D{i:1}D{i:2}D{i:3}D{i:4}D{i:5}D{i:6}
D{i:7}D{i:8}
}
##^##*/
